// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VienHoa.DataEx;

#nullable disable

namespace VienHoa.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VienHoa.Entity.ChatThai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("LoaiChatThaiId")
                        .HasColumnType("int");

                    b.Property<string>("TenChatThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoaiChatThaiId");

                    b.ToTable("chatThais");
                });

            modelBuilder.Entity("VienHoa.Entity.ChiSoTacDong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("GiaTri")
                        .HasColumnType("float");

                    b.Property<int>("LCAId")
                        .HasColumnType("int");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int");

                    b.Property<int>("TacDongId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LCAId");

                    b.HasIndex("SanPhamId");

                    b.HasIndex("TacDongId");

                    b.ToTable("chiSoTacDongs");
                });

            modelBuilder.Entity("VienHoa.Entity.CongSuatThietKe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("CongSuatDinhMuc")
                        .HasColumnType("float");

                    b.Property<string>("DonViCongSuat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("congSuatThietKes");
                });

            modelBuilder.Entity("VienHoa.Entity.DoanhNghiep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiLienHe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuocGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenCongTy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("doanhNghieps");
                });

            modelBuilder.Entity("VienHoa.Entity.DonViDoTheoNam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TenDonVi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("donViDoTheoNams");
                });

            modelBuilder.Entity("VienHoa.Entity.DonViSanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TenDonVi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("donViSanPhams");
                });

            modelBuilder.Entity("VienHoa.Entity.DuAn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DoanhNghiepId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenDuAn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DoanhNghiepId");

                    b.ToTable("duAns");
                });

            modelBuilder.Entity("VienHoa.Entity.GayNongLenToanCau", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("GiaTri")
                        .HasColumnType("float");

                    b.Property<int>("KhiPhatThaiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KhiPhatThaiId");

                    b.ToTable("gayNongLenToanCaus");
                });

            modelBuilder.Entity("VienHoa.Entity.HeSoPhatThaiDien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("GiaTri")
                        .HasColumnType("float");

                    b.Property<int>("KhiPhatThaiId")
                        .HasColumnType("int");

                    b.Property<int>("Nam")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KhiPhatThaiId");

                    b.ToTable("heSoPhatThaiDiens");
                });

            modelBuilder.Entity("VienHoa.Entity.HeSoPhatThaiTuNguyenLieu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DonViTinhId")
                        .HasColumnType("int");

                    b.Property<double>("GiaTri")
                        .HasColumnType("float");

                    b.Property<int>("KhiPhatThaiId")
                        .HasColumnType("int");

                    b.Property<int>("NguyenLieuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KhiPhatThaiId");

                    b.HasIndex("NguyenLieuId");

                    b.ToTable("heSoPhatThaiTuNguyenLieus");
                });

            modelBuilder.Entity("VienHoa.Entity.HeSoPhatThaiTuNhienLieu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DonViTinhId")
                        .HasColumnType("int");

                    b.Property<double>("GiaTri")
                        .HasColumnType("float");

                    b.Property<int>("KhiPhatThaiId")
                        .HasColumnType("int");

                    b.Property<int>("NhienLieuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KhiPhatThaiId");

                    b.HasIndex("NhienLieuId");

                    b.ToTable("heSoPhatThaiTuNhienLieus");
                });

            modelBuilder.Entity("VienHoa.Entity.KhiPhatThai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TenKhi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("khiPhatThais");
                });

            modelBuilder.Entity("VienHoa.Entity.LCA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("KyHieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLCA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LCAs");
                });

            modelBuilder.Entity("VienHoa.Entity.LoaiChatThai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TenLoaiChatThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("loaiChatThais");
                });

            modelBuilder.Entity("VienHoa.Entity.LoaiLoNung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TenLoaiLo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("loaiLoNungs");
                });

            modelBuilder.Entity("VienHoa.Entity.LoaiNguyenLieu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TenLoai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("loaiNguyenLieus");
                });

            modelBuilder.Entity("VienHoa.Entity.LoaiNhaMay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TenLoai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("loaiNhaMays");
                });

            modelBuilder.Entity("VienHoa.Entity.LoaiNhienLieu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TenLoai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("loaiNhienLieus");
                });

            modelBuilder.Entity("VienHoa.Entity.LoNungTrongNhaMay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("LoaiLoNungId")
                        .HasColumnType("int");

                    b.Property<int>("NhaMayId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LoaiLoNungId");

                    b.HasIndex("NhaMayId");

                    b.ToTable("loNungTrongNhaMays");
                });

            modelBuilder.Entity("VienHoa.Entity.NguyenLieu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DonViDoTheoNamId")
                        .HasColumnType("int");

                    b.Property<int>("LoaiNguyenLieuId")
                        .HasColumnType("int");

                    b.Property<string>("TenHienThiTieuThu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNguyenLieu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DonViDoTheoNamId");

                    b.HasIndex("LoaiNguyenLieuId");

                    b.ToTable("nguyenLieus");
                });

            modelBuilder.Entity("VienHoa.Entity.NguyenLieuNam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("SanXuatNamId")
                        .HasColumnType("int");

                    b.Property<double>("SoLuong")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("SanXuatNamId");

                    b.ToTable("nguyenLieuNams");
                });

            modelBuilder.Entity("VienHoa.Entity.NguyenLieuSanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DonViId")
                        .HasColumnType("int");

                    b.Property<int>("LCAId")
                        .HasColumnType("int");

                    b.Property<int>("NguyenLieuId")
                        .HasColumnType("int");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int");

                    b.Property<double>("SoLuong")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DonViId");

                    b.HasIndex("LCAId");

                    b.HasIndex("NguyenLieuId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("nguyenLieuSanPhams");
                });

            modelBuilder.Entity("VienHoa.Entity.NguyenLieuSanPhamChiSoTacDong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChiSoTacDongId")
                        .HasColumnType("int");

                    b.Property<double>("GiaTri")
                        .HasColumnType("float");

                    b.Property<int>("NguyenLieuSanPhamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChiSoTacDongId");

                    b.HasIndex("NguyenLieuSanPhamId");

                    b.ToTable("nguyenLieuSanPhamChiSoTacDongs");
                });

            modelBuilder.Entity("VienHoa.Entity.NhaMay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CongSuatThietKeId")
                        .HasColumnType("int");

                    b.Property<int>("DoanhNghiepId")
                        .HasColumnType("int");

                    b.Property<int>("LoaiLoNungId")
                        .HasColumnType("int");

                    b.Property<int>("LoaiNhaMayId")
                        .HasColumnType("int");

                    b.Property<string>("TenNhaMay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TiLeCoPhan")
                        .HasColumnType("float");

                    b.Property<string>("ViTri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CongSuatThietKeId");

                    b.HasIndex("DoanhNghiepId");

                    b.HasIndex("LoaiLoNungId");

                    b.HasIndex("LoaiNhaMayId");

                    b.ToTable("nhaMays");
                });

            modelBuilder.Entity("VienHoa.Entity.NhienLieu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DonViDoTheoNamId")
                        .HasColumnType("int");

                    b.Property<int>("LoaiNhienLieuId")
                        .HasColumnType("int");

                    b.Property<double>("NhietTriRieng")
                        .HasColumnType("float");

                    b.Property<string>("TenHienThiTieuThu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNhienLieu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DonViDoTheoNamId");

                    b.HasIndex("LoaiNhienLieuId");

                    b.ToTable("nhienLieus");
                });

            modelBuilder.Entity("VienHoa.Entity.NhienLieuSanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DonViId")
                        .HasColumnType("int");

                    b.Property<int>("LCAId")
                        .HasColumnType("int");

                    b.Property<int>("NhienLieuId")
                        .HasColumnType("int");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int");

                    b.Property<double>("SoLuong")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DonViId");

                    b.HasIndex("LCAId");

                    b.HasIndex("NhienLieuId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("nhienLieuSanPhams");
                });

            modelBuilder.Entity("VienHoa.Entity.NhienLieuSanPhamChiSoTacDong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChiSoTacDongId")
                        .HasColumnType("int");

                    b.Property<double>("GiaTri")
                        .HasColumnType("float");

                    b.Property<int>("NhienLieuSanPhamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChiSoTacDongId");

                    b.HasIndex("NhienLieuSanPhamId");

                    b.ToTable("nhienLieuSanPhamChiSoTacDongs");
                });

            modelBuilder.Entity("VienHoa.Entity.SanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CongNghe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CongSuatThietKe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DuAnId")
                        .HasColumnType("int");

                    b.Property<string>("KyHieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoaiLoNungId")
                        .HasColumnType("int");

                    b.Property<string>("MaCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NhaMayId")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DuAnId");

                    b.HasIndex("LoaiLoNungId");

                    b.HasIndex("NhaMayId");

                    b.ToTable("sanPhams");
                });

            modelBuilder.Entity("VienHoa.Entity.SanXuatNam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("DBKK_SanXuatDienNang")
                        .HasColumnType("float");

                    b.Property<double>("DBKK_TieuThuDienNang")
                        .HasColumnType("float");

                    b.Property<double>("DBKK_TieuThuNguyenLieu")
                        .HasColumnType("float");

                    b.Property<double>("DBKK_TieuThuNhienLieu")
                        .HasColumnType("float");

                    b.Property<int>("NamSanXuat")
                        .HasColumnType("int");

                    b.Property<int>("NhaMayId")
                        .HasColumnType("int");

                    b.Property<double>("SLSP_LuongBanRa")
                        .HasColumnType("float");

                    b.Property<double>("SLSP_LuongLuuKho")
                        .HasColumnType("float");

                    b.Property<double>("SLSP_LuongMuaVao")
                        .HasColumnType("float");

                    b.Property<double>("SLSP_SanLuongSanPham")
                        .HasColumnType("float");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int");

                    b.Property<double>("TTDN_TongLuongDien")
                        .HasColumnType("float");

                    b.Property<double>("TTDN_TongLuongSH")
                        .HasColumnType("float");

                    b.Property<double>("TTDN_TongLuongSX")
                        .HasColumnType("float");

                    b.Property<double>("TTDN_TongLuongTuSX")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("NhaMayId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("sanXuatNams");
                });

            modelBuilder.Entity("VienHoa.Entity.TacDong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TenTacDong")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tacDongs");
                });

            modelBuilder.Entity("VienHoa.Entity.ThaiDauRa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChatThaiId")
                        .HasColumnType("int");

                    b.Property<int>("DonViId")
                        .HasColumnType("int");

                    b.Property<double>("HeSoDieuChinh")
                        .HasColumnType("float");

                    b.Property<int>("LCAId")
                        .HasColumnType("int");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int");

                    b.Property<double>("SoLuong")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ChatThaiId");

                    b.HasIndex("DonViId");

                    b.HasIndex("LCAId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("thaiDauRas");
                });

            modelBuilder.Entity("VienHoa.Entity.ThaiDauRaChiSoTacDong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChiSoTacDongId")
                        .HasColumnType("int");

                    b.Property<double>("GiaTri")
                        .HasColumnType("float");

                    b.Property<int>("ThaiDauRaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChiSoTacDongId");

                    b.HasIndex("ThaiDauRaId");

                    b.ToTable("thaiDauRaChiSoTacDongs");
                });

            modelBuilder.Entity("VienHoa.Entity.TieuThuNhienLieuLoNam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DonViDoNamId")
                        .HasColumnType("int");

                    b.Property<int>("NamSanXuat")
                        .HasColumnType("int");

                    b.Property<int>("NhaMayId")
                        .HasColumnType("int");

                    b.Property<double>("SoLuong")
                        .HasColumnType("float");

                    b.Property<string>("TenNhienLieu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DonViDoNamId");

                    b.HasIndex("NhaMayId");

                    b.ToTable("tieuThuNhienLieuLoNams");
                });

            modelBuilder.Entity("VienHoa.Entity.ChatThai", b =>
                {
                    b.HasOne("VienHoa.Entity.LoaiChatThai", "LoaiChatThai")
                        .WithMany("ChatThais")
                        .HasForeignKey("LoaiChatThaiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiChatThai");
                });

            modelBuilder.Entity("VienHoa.Entity.ChiSoTacDong", b =>
                {
                    b.HasOne("VienHoa.Entity.LCA", "LCA")
                        .WithMany("ChiSoTacDongs")
                        .HasForeignKey("LCAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.SanPham", "SanPham")
                        .WithMany("ChiSoTacDongs")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.TacDong", "TacDong")
                        .WithMany("ChiSoTacDongs")
                        .HasForeignKey("TacDongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LCA");

                    b.Navigation("SanPham");

                    b.Navigation("TacDong");
                });

            modelBuilder.Entity("VienHoa.Entity.DuAn", b =>
                {
                    b.HasOne("VienHoa.Entity.DoanhNghiep", "DoanhNghiep")
                        .WithMany("DuAns")
                        .HasForeignKey("DoanhNghiepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoanhNghiep");
                });

            modelBuilder.Entity("VienHoa.Entity.GayNongLenToanCau", b =>
                {
                    b.HasOne("VienHoa.Entity.KhiPhatThai", "KhiPhatThai")
                        .WithMany("GayNongLenToanCaus")
                        .HasForeignKey("KhiPhatThaiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhiPhatThai");
                });

            modelBuilder.Entity("VienHoa.Entity.HeSoPhatThaiDien", b =>
                {
                    b.HasOne("VienHoa.Entity.KhiPhatThai", "KhiPhatThai")
                        .WithMany("HeSoPhatThaiDiens")
                        .HasForeignKey("KhiPhatThaiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhiPhatThai");
                });

            modelBuilder.Entity("VienHoa.Entity.HeSoPhatThaiTuNguyenLieu", b =>
                {
                    b.HasOne("VienHoa.Entity.KhiPhatThai", "KhiPhatThai")
                        .WithMany("HeSoPhatThaiTuNguyenLieus")
                        .HasForeignKey("KhiPhatThaiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.NguyenLieu", "NguyenLieu")
                        .WithMany("HeSoPhatThaiTuNguyenLieus")
                        .HasForeignKey("NguyenLieuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhiPhatThai");

                    b.Navigation("NguyenLieu");
                });

            modelBuilder.Entity("VienHoa.Entity.HeSoPhatThaiTuNhienLieu", b =>
                {
                    b.HasOne("VienHoa.Entity.KhiPhatThai", "KhiPhatThai")
                        .WithMany("HeSoPhatThaiTuNhienLieus")
                        .HasForeignKey("KhiPhatThaiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.NhienLieu", "NhienLieu")
                        .WithMany("HeSoPhatThaiTuNhienLieus")
                        .HasForeignKey("NhienLieuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhiPhatThai");

                    b.Navigation("NhienLieu");
                });

            modelBuilder.Entity("VienHoa.Entity.LoNungTrongNhaMay", b =>
                {
                    b.HasOne("VienHoa.Entity.LoaiLoNung", "LoaiLoNung")
                        .WithMany("LoNungTrongNhaMays")
                        .HasForeignKey("LoaiLoNungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.NhaMay", "NhaMay")
                        .WithMany("LoNungTrongNhaMays")
                        .HasForeignKey("NhaMayId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LoaiLoNung");

                    b.Navigation("NhaMay");
                });

            modelBuilder.Entity("VienHoa.Entity.NguyenLieu", b =>
                {
                    b.HasOne("VienHoa.Entity.DonViDoTheoNam", "DonViDoTheoNam")
                        .WithMany()
                        .HasForeignKey("DonViDoTheoNamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.LoaiNguyenLieu", "LoaiNguyenLieu")
                        .WithMany("NguyenLieus")
                        .HasForeignKey("LoaiNguyenLieuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonViDoTheoNam");

                    b.Navigation("LoaiNguyenLieu");
                });

            modelBuilder.Entity("VienHoa.Entity.NguyenLieuNam", b =>
                {
                    b.HasOne("VienHoa.Entity.SanXuatNam", "SanXuatNam")
                        .WithMany("NguyenLieuNams")
                        .HasForeignKey("SanXuatNamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanXuatNam");
                });

            modelBuilder.Entity("VienHoa.Entity.NguyenLieuSanPham", b =>
                {
                    b.HasOne("VienHoa.Entity.DonViSanPham", "DonVi")
                        .WithMany("NguyenLieuSanPhams")
                        .HasForeignKey("DonViId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.LCA", "LCA")
                        .WithMany("NguyenLieuSanPhams")
                        .HasForeignKey("LCAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.NguyenLieu", "NguyenLieu")
                        .WithMany("NguyenLieuSanPhams")
                        .HasForeignKey("NguyenLieuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.SanPham", "SanPham")
                        .WithMany("NguyenLieuSanPhams")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DonVi");

                    b.Navigation("LCA");

                    b.Navigation("NguyenLieu");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("VienHoa.Entity.NguyenLieuSanPhamChiSoTacDong", b =>
                {
                    b.HasOne("VienHoa.Entity.ChiSoTacDong", "ChiSoTacDong")
                        .WithMany("NguyenLieuSanPhamChiSoTacDongs")
                        .HasForeignKey("ChiSoTacDongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.NguyenLieuSanPham", "NguyenLieuSanPham")
                        .WithMany("NguyenLieuSanPhamChiSoTacDongs")
                        .HasForeignKey("NguyenLieuSanPhamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChiSoTacDong");

                    b.Navigation("NguyenLieuSanPham");
                });

            modelBuilder.Entity("VienHoa.Entity.NhaMay", b =>
                {
                    b.HasOne("VienHoa.Entity.CongSuatThietKe", "CongSuatThietKe")
                        .WithMany("NhaMays")
                        .HasForeignKey("CongSuatThietKeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.DoanhNghiep", "DoanhNghiep")
                        .WithMany("NhaMays")
                        .HasForeignKey("DoanhNghiepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.LoaiLoNung", "LoaiLoNung")
                        .WithMany("NhaMays")
                        .HasForeignKey("LoaiLoNungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.LoaiNhaMay", "LoaiNhaMay")
                        .WithMany("NhaMays")
                        .HasForeignKey("LoaiNhaMayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CongSuatThietKe");

                    b.Navigation("DoanhNghiep");

                    b.Navigation("LoaiLoNung");

                    b.Navigation("LoaiNhaMay");
                });

            modelBuilder.Entity("VienHoa.Entity.NhienLieu", b =>
                {
                    b.HasOne("VienHoa.Entity.DonViDoTheoNam", "DonViDoTheoNam")
                        .WithMany()
                        .HasForeignKey("DonViDoTheoNamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.LoaiNhienLieu", "LoaiNhienLieu")
                        .WithMany("NhienLieus")
                        .HasForeignKey("LoaiNhienLieuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonViDoTheoNam");

                    b.Navigation("LoaiNhienLieu");
                });

            modelBuilder.Entity("VienHoa.Entity.NhienLieuSanPham", b =>
                {
                    b.HasOne("VienHoa.Entity.DonViSanPham", "DonVi")
                        .WithMany("NhienLieuSanPhams")
                        .HasForeignKey("DonViId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.LCA", "LCA")
                        .WithMany("NhienLieuSanPhams")
                        .HasForeignKey("LCAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.NhienLieu", "NhienLieu")
                        .WithMany("NhienLieuSanPhams")
                        .HasForeignKey("NhienLieuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.SanPham", "SanPham")
                        .WithMany("NhienLieuSanPhams")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DonVi");

                    b.Navigation("LCA");

                    b.Navigation("NhienLieu");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("VienHoa.Entity.NhienLieuSanPhamChiSoTacDong", b =>
                {
                    b.HasOne("VienHoa.Entity.ChiSoTacDong", "ChiSoTacDong")
                        .WithMany("NhienLieuSanPhamChiSoTacDongs")
                        .HasForeignKey("ChiSoTacDongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.NhienLieuSanPham", "NhienLieuSanPham")
                        .WithMany("NhienLieuSanPhamChiSoTacDongs")
                        .HasForeignKey("NhienLieuSanPhamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChiSoTacDong");

                    b.Navigation("NhienLieuSanPham");
                });

            modelBuilder.Entity("VienHoa.Entity.SanPham", b =>
                {
                    b.HasOne("VienHoa.Entity.DuAn", "DuAn")
                        .WithMany()
                        .HasForeignKey("DuAnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.LoaiLoNung", "LoaiLoNung")
                        .WithMany()
                        .HasForeignKey("LoaiLoNungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.NhaMay", "NhaMay")
                        .WithMany("SanPhams")
                        .HasForeignKey("NhaMayId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DuAn");

                    b.Navigation("LoaiLoNung");

                    b.Navigation("NhaMay");
                });

            modelBuilder.Entity("VienHoa.Entity.SanXuatNam", b =>
                {
                    b.HasOne("VienHoa.Entity.NhaMay", "NhaMay")
                        .WithMany()
                        .HasForeignKey("NhaMayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.SanPham", "SanPham")
                        .WithMany("SanXuatNams")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NhaMay");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("VienHoa.Entity.ThaiDauRa", b =>
                {
                    b.HasOne("VienHoa.Entity.ChatThai", "ChatThai")
                        .WithMany("ThaiDauRas")
                        .HasForeignKey("ChatThaiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.DonViSanPham", "DonVi")
                        .WithMany("ThaiDauRas")
                        .HasForeignKey("DonViId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.LCA", "LCA")
                        .WithMany("ThaiDauRas")
                        .HasForeignKey("LCAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.SanPham", "SanPham")
                        .WithMany("ThaiDauRas")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChatThai");

                    b.Navigation("DonVi");

                    b.Navigation("LCA");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("VienHoa.Entity.ThaiDauRaChiSoTacDong", b =>
                {
                    b.HasOne("VienHoa.Entity.ChiSoTacDong", "ChiSoTacDong")
                        .WithMany("ThaiDauRaChiSoTacDongs")
                        .HasForeignKey("ChiSoTacDongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.ThaiDauRa", "ThaiDauRa")
                        .WithMany("ThaiDauRaChiSoTacDongs")
                        .HasForeignKey("ThaiDauRaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChiSoTacDong");

                    b.Navigation("ThaiDauRa");
                });

            modelBuilder.Entity("VienHoa.Entity.TieuThuNhienLieuLoNam", b =>
                {
                    b.HasOne("VienHoa.Entity.DonViDoTheoNam", "DonViDoNam")
                        .WithMany("TieuThuNhienLieuLoNams")
                        .HasForeignKey("DonViDoNamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VienHoa.Entity.NhaMay", "NhaMay")
                        .WithMany("TieuThuNhienLieuLoNams")
                        .HasForeignKey("NhaMayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonViDoNam");

                    b.Navigation("NhaMay");
                });

            modelBuilder.Entity("VienHoa.Entity.ChatThai", b =>
                {
                    b.Navigation("ThaiDauRas");
                });

            modelBuilder.Entity("VienHoa.Entity.ChiSoTacDong", b =>
                {
                    b.Navigation("NguyenLieuSanPhamChiSoTacDongs");

                    b.Navigation("NhienLieuSanPhamChiSoTacDongs");

                    b.Navigation("ThaiDauRaChiSoTacDongs");
                });

            modelBuilder.Entity("VienHoa.Entity.CongSuatThietKe", b =>
                {
                    b.Navigation("NhaMays");
                });

            modelBuilder.Entity("VienHoa.Entity.DoanhNghiep", b =>
                {
                    b.Navigation("DuAns");

                    b.Navigation("NhaMays");
                });

            modelBuilder.Entity("VienHoa.Entity.DonViDoTheoNam", b =>
                {
                    b.Navigation("TieuThuNhienLieuLoNams");
                });

            modelBuilder.Entity("VienHoa.Entity.DonViSanPham", b =>
                {
                    b.Navigation("NguyenLieuSanPhams");

                    b.Navigation("NhienLieuSanPhams");

                    b.Navigation("ThaiDauRas");
                });

            modelBuilder.Entity("VienHoa.Entity.KhiPhatThai", b =>
                {
                    b.Navigation("GayNongLenToanCaus");

                    b.Navigation("HeSoPhatThaiDiens");

                    b.Navigation("HeSoPhatThaiTuNguyenLieus");

                    b.Navigation("HeSoPhatThaiTuNhienLieus");
                });

            modelBuilder.Entity("VienHoa.Entity.LCA", b =>
                {
                    b.Navigation("ChiSoTacDongs");

                    b.Navigation("NguyenLieuSanPhams");

                    b.Navigation("NhienLieuSanPhams");

                    b.Navigation("ThaiDauRas");
                });

            modelBuilder.Entity("VienHoa.Entity.LoaiChatThai", b =>
                {
                    b.Navigation("ChatThais");
                });

            modelBuilder.Entity("VienHoa.Entity.LoaiLoNung", b =>
                {
                    b.Navigation("LoNungTrongNhaMays");

                    b.Navigation("NhaMays");
                });

            modelBuilder.Entity("VienHoa.Entity.LoaiNguyenLieu", b =>
                {
                    b.Navigation("NguyenLieus");
                });

            modelBuilder.Entity("VienHoa.Entity.LoaiNhaMay", b =>
                {
                    b.Navigation("NhaMays");
                });

            modelBuilder.Entity("VienHoa.Entity.LoaiNhienLieu", b =>
                {
                    b.Navigation("NhienLieus");
                });

            modelBuilder.Entity("VienHoa.Entity.NguyenLieu", b =>
                {
                    b.Navigation("HeSoPhatThaiTuNguyenLieus");

                    b.Navigation("NguyenLieuSanPhams");
                });

            modelBuilder.Entity("VienHoa.Entity.NguyenLieuSanPham", b =>
                {
                    b.Navigation("NguyenLieuSanPhamChiSoTacDongs");
                });

            modelBuilder.Entity("VienHoa.Entity.NhaMay", b =>
                {
                    b.Navigation("LoNungTrongNhaMays");

                    b.Navigation("SanPhams");

                    b.Navigation("TieuThuNhienLieuLoNams");
                });

            modelBuilder.Entity("VienHoa.Entity.NhienLieu", b =>
                {
                    b.Navigation("HeSoPhatThaiTuNhienLieus");

                    b.Navigation("NhienLieuSanPhams");
                });

            modelBuilder.Entity("VienHoa.Entity.NhienLieuSanPham", b =>
                {
                    b.Navigation("NhienLieuSanPhamChiSoTacDongs");
                });

            modelBuilder.Entity("VienHoa.Entity.SanPham", b =>
                {
                    b.Navigation("ChiSoTacDongs");

                    b.Navigation("NguyenLieuSanPhams");

                    b.Navigation("NhienLieuSanPhams");

                    b.Navigation("SanXuatNams");

                    b.Navigation("ThaiDauRas");
                });

            modelBuilder.Entity("VienHoa.Entity.SanXuatNam", b =>
                {
                    b.Navigation("NguyenLieuNams");
                });

            modelBuilder.Entity("VienHoa.Entity.TacDong", b =>
                {
                    b.Navigation("ChiSoTacDongs");
                });

            modelBuilder.Entity("VienHoa.Entity.ThaiDauRa", b =>
                {
                    b.Navigation("ThaiDauRaChiSoTacDongs");
                });
#pragma warning restore 612, 618
        }
    }
}
